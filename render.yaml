services:
  - type: web
    name: wyndham-grant-radar
    env: python
    plan: free
    autoDeploy: true
    buildCommand: pip install -r requirements.txt
    startCommand: streamlit run app.py --server.port $PORT --server.address 0.0.0.0
    envVars:
      - key: PYTHON_VERSION
        value: 3.11.9

cronJobs:
  # 1) DAILY REFRESH — pulls/updates data and rewrites grants.json
  - name: wyndham-daily-refresh
    # 19:15 UTC = early morning in VIC/AUS; change if you like
    schedule: "15 19 * * *"
    env: python
    buildCommand: pip install -r requirements.txt
    # If you have ingest.py, this will run it, then enrich/tag for Wyndham.
    # If you don't, it just re-enriches your existing grants.json.
    startCommand: >
      bash -lc '
      if [ -f ingest.py ]; then
        python ingest.py || true;
      fi;
      if [ -f data/grants.jsonl ]; then
        python enrich_wyndham.py --in data/grants.jsonl --out grants.json --lga "Wyndham";
      elif [ -f data/grants.json ]; then
        python enrich_wyndham.py --in data/grants.json --out grants.json --lga "Wyndham";
      else
        python enrich_wyndham.py --in grants.json --out grants.json --lga "Wyndham";
      fi
      '

  # 2) WEEKLY DIGEST — sends “New this week / Closing soon” email
  - name: wyndham-weekly-digest
    # Fri 23:00 UTC ≈ Sat morning AEST for council staff
    schedule: "0 23 * * FRI"
    env: python
    buildCommand: pip install -r requirements.txt
    startCommand: python weekly_digest.py --send
    envVars:
      - key: DIGEST_TO        # set these in Render → Environment
        value: ""
      - key: DIGEST_FROM
        value: "no-reply@yourapp"
      - key: SMTP_HOST
        value: "smtp.gmail.com"
      - key: SMTP_PORT
        value: "587"
      # Add SMTP_USER and SMTP_PASS as *Secrets* in the Render dashboard
      - key: DIGEST_CLOSING_DAYS
        value: "14"
      - key: DIGEST_SUBJECT_PREFIX
        value: "[Wyndham]"
      - key: DIGEST_LGA
        value: "Wyndham"
